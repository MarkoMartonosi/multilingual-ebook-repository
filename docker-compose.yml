version: "3"
services:
    db:
        image: mysql:5.7
        environment:
            - MYSQL_DATABASE=ebook_repository
            - MYSQL_ROOT_PASSWORD=root
        ports:
            - "33006:3306"
    backbone:
        build:  ./backbone
        command: >
            sh -c "python backbone/manage.py wait_for_db &&
                   python backbone/manage.py migrate &&
                   python backbone/manage.py seeddatabase &&
                   python backbone/manage.py runserver 0.0.0.0:8000"
        ports:
            - "8000:8000"
        volumes:
            - .:/backbone
        depends_on:
            - db
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
        environment:
            - cluster.initial_master_nodes=es
            - discovery.type=single-node
            - cluster.name=docker.cluster
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - http.cors.enabled=true
            - http.cors.allow-origin=*
            - network.host=_eth0_
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
        volumes:
            - .:/es
        command: > 
            sh -c "su elasticsearch ./bin/elasticsearch-plugin install https://srv-file7.gofile.io/download/vF2GXM/serbian-analyzer-1.0-SNAPSHOT.zip && su elasticsearch -c './bin/elasticsearch -Ediscovery.type=single-node -Ehttp.cors.enabled=true -Ehttp.cors.allow-origin=http://search:5000'"
    search:
        build: ./search
        ports:
            - "5000:5000"
        command:
            sh -c "flask run --host=0.0.0.0 --port=5000"
        depends_on:
            - es
    translate:
        build: ./translate
        ports:
            - "5001:5001"
        command: > 
            sh -c "flask run --host=0.0.0.0 --port=5001"
        depends_on:
            - search
    frontend:
        build: ./frontend
        ports:
            - "3000:3000"
        command: >
            sh -c "npm start"
